node {



	image = 'aoliveirasilva/site-okd'

	//EXPONDO QUE SERÁ UTILIZADO UM ENDEREÇO REMOTO PARA CRIAÇÃO DE CONTEINERES
	docker.withServer('172.27.11.100:2375') {

		stage('Fetch') {

			//clonando repo
			git credentialsId: 'gitea', url: 'git@172.27.11.10:devops/site.git'

			//Exclui os arquivos ocultos do git
			sh 'rm -rf .git*'

		}
		stage('Build') {

			//FAZENDO O BUILD DA IMAGEM - CRIANDO A IMAGEM
			docker.build(image, '-f docker/Dockerfile .')
		}
		
		stage('Test'){
		    
		    //step de testes
		    
		    docker.image(image).withRun() { site ->
		    
		        //extraindo o ipv4 do conteinere do site - capturando a saida
		        ip = sh(returnStdout: true, script: "docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' ${site.id}").trim()
		    
		        //subindo um conteinere do busybox para realizar testes no conteniere da aplicação
		        docker.image('busybox').withRun('--tty --interactive'){ busybox ->
		        
		            //capturando a saida para validação de uma caracteristica da aplicação
		            output = sh( returnStdout: true, script: "docker exec ${busybox.id} wget -q -O - ${ip}")
		            if (!output.contains('Jenkins')) {
		                
		                error('Palavra não encontrada')
		                
		            }
		        }
		    }
		}		
		stage('Save') {


			//Salvando a imagem no registry
			docker.withRegistry('https://index.docker.io/v1/', 'dockerregistry') {

				//fazendo o push da imagem do Docker Hub
				docker.image(image).push()
			}

		}
		
		


	}
	stage('Deploy') {

		//fazendo um for
		[100, 200].each {

			docker.withServer("172.27.11.${it}:2375") {
			    
			    try{
			    //Removendo o conteinere do site
			        sh 'docker rm -f site'
			    }
			    catch(ex){
			        
			        print('Conteinere não existe')
			        
			    }
				docker.image(image).run('-p 8181:80 --name site')

			}

		}

	}

}